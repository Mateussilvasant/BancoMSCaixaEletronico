@startuml

title __VIEW's Class Diagram__\n

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.CaixaView {
        {static} + METRICS : Metrics
        {static} + main()
        + start()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.ClienteView {
        - botaoDepositar : Button
        - botaoExtrato : Button
        - botaoSacar : Button
        - botaoTransferencia : Button
        - hboxView : HBox
        + ClienteView()
        + iniciarCorrenteView()
        + iniciarInvestimento()
        + iniciarPoupancaView()
    }
  }
  

  namespace br.com.bancoms.view {
    enum ClienteViewFactory {
      CORRENTE
      INVESTIMENTO
      POUPANCA
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.DepositoView {
        + fieldNumeroConta : TextField
        - botaoCancelar : Button
        - botaoInserirValor : Button
        - botaoNumeroConta : Button
        - botoesInserirValor : HBox
        - botoesOutraConta : HBox
        - formNumeroConta : HBox
        - formValorDeposito : StackPane
        - grupoBotoes : HBox
        - labelDepositoTipo : Label
        - opcoesConta : HBox
        + DepositoView()
        + iniciarFormOutraConta()
        + iniciarFormTipoDeposito()
        + iniciarFormValor()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.ExtratoView {
        - botaoExtratos : Button
        - botaoVoltar : Button
        - boxFiltro : HBox
        - boxLabelCentral : VBox
        - diasOpcao : ComboBox
        - labelExtrato : TextFlow
        - movimentosListPane : VBox
        - movimentosScrollPane : ScrollPane
        - saldoBox : HBox
        - tipoMovimentoOpcao : ComboBox
        - tiposMovimentos : HashMap<String, Integer>
        + ExtratoView()
        + adicionarMovimentoItem()
        + getPeriodo()
        + getTipoAtual()
        + getTipoAtualValor()
        + iniciarView()
        + limparMovimentosView()
        + trocarDetalhes()
        - addTiposMovimentosComboBox()
        - criarSaldoBox()
        - criarTiposMovimentosOpcoes()
        - getDiasOpcoes()
        - setTiposMovimentos()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.LoginView {
        + fieldNumeroConta : TextField
        + fieldSenha : PasswordField
        + LoginView()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.MainView {
        {static} + formatarReal : NumberFormat
        - botaoSair : Button
        - boxSubMenuCliente : VBox
        - labelClienteNome : Label
        - labelClienteSaldo : Label
        - labelClienteTipoConta : Label
        - labelMostrarSaldo : Label
        - saldoOculto : boolean
        - subMenuCliente : StackPane
        - titleBar : Label
        - topBar : StackPane
        + MainView()
        + addSubMenuCliente()
        + atualizarSaldoView()
        + onAlertView()
        + setTituloBarText()
        + transitarMenu()
        - initBar()
        - initLoginView()
        - mostrarSaldo()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.MovimentoItemView {
        - boxDetalhes : HBox
        - boxResumo : HBox
        - clienteDestino : Label
        - clienteOrigem : Label
        - detalhes : Hyperlink
        + MovimentoItemView()
        + detalhesView()
        + getMovimento()
        + removerDetalhesView()
        + setMovimento()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.SaqueView {
        - boxSaqueTitle : HBox
        - buttonCancelar : Button
        - buttonSacar : Button
        - buttons : HBox
        - labelTitle : Label
        + SaqueView()
        + initSaqueView()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.TransferenciaView {
        + fieldNumeroConta : TextField
        - botaoNumeroConta : Button
        - botaoTransferir : Button
        - boxBotoesNumeroConta : HBox
        - boxTitle : HBox
        - boxValorOperacao : HBox
        - formNumeroConta : HBox
        - labelTitle : Label
        + TransferenciaView()
        + iniciarFormInserirValor()
        + iniciarView()
    }
  }
  

  namespace br.com.bancoms.view {
    class br.com.bancoms.view.View {
        {static} + createButton()
        {static} + createButton()
        {static} + setSizeElemento()
        {static} + setSizeElemento()
    }
  }
  

  br.com.bancoms.view.CaixaView -up-|> javafx.application.Application
  br.com.bancoms.view.ClienteView -up-|> javafx.scene.layout.StackPane
  br.com.bancoms.view.DepositoView -up-|> javafx.scene.layout.VBox
  br.com.bancoms.view.ExtratoView -up-|> javafx.scene.layout.VBox
  br.com.bancoms.view.ExtratoView o-- br.com.bancoms.controller.ExtratoController : extratoController
  br.com.bancoms.view.ExtratoView o-- br.com.bancoms.view.MovimentoItemView : movimentoItemViewAtual
  br.com.bancoms.view.LoginView -up-|> javafx.scene.layout.StackPane
  br.com.bancoms.view.MainView -up-|> javafx.scene.layout.StackPane
  br.com.bancoms.view.MovimentoItemView -up-|> javafx.scene.layout.VBox
  br.com.bancoms.view.MovimentoItemView o-- br.com.bancoms.model.Movimento : movimento
  br.com.bancoms.view.SaqueView -up-|> javafx.scene.layout.VBox
  br.com.bancoms.view.TransferenciaView -up-|> javafx.scene.layout.VBox


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
